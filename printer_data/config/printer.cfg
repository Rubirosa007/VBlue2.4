[include shell_command.cfg]

 
#__/\\\________/\\\_______/\\\\\_________/\\\\\\\\\___________/\\\\\_______/\\\\\_____/\\\_#       
 #_\/\\\_______\/\\\_____/\\\///\\\_____/\\\///////\\\_______/\\\///\\\____\/\\\\\\___\/\\\_#       
  #_\//\\\______/\\\____/\\\/__\///\\\__\/\\\_____\/\\\_____/\\\/__\///\\\__\/\\\/\\\__\/\\\_#      
   #__\//\\\____/\\\____/\\\______\//\\\_\/\\\\\\\\\\\/_____/\\\______\//\\\_\/\\\//\\\_\/\\\_#     
    #___\//\\\__/\\\____\/\\\_______\/\\\_\/\\\//////\\\____\/\\\_______\/\\\_\/\\\\//\\\\/\\\_#    
     #____\//\\\/\\\_____\//\\\______/\\\__\/\\\____\//\\\___\//\\\______/\\\__\/\\\_\//\\\/\\\_#   
      #_____\//\\\\\_______\///\\\__/\\\____\/\\\_____\//\\\___\///\\\__/\\\____\/\\\__\//\\\\\\_#  
       #______\//\\\__________\///\\\\\/_____\/\\\______\//\\\____\///\\\\\/_____\/\\\___\//\\\\\_# 
        #_______\///_____________\/////_______\///________\///_______\/////_______\///_____\/////__#

# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section


[mcu]

#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_280031000D50315939343520-if00
#serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4:1.0
restart_method: command
##--------------------------------------------------------------------
[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: 9b3140d9eaf3
##------------------------------------------------------------------------

[input_shaper]
shaper_freq_y: 41.8
shaper_type_y: mzv
shaper_freq_x: 67.4
shaper_type_x: mzv

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
#axes_map: z,-y,x

[resonance_tester]
probe_points: 150, 150, 20
accel_chip: adxl345





#######################################################
################### INCLUDE FILES #######################


[include mainsail.cfg]
[include SB_led_macros.cfg]
[include stealthburner_leds.cfg]
[include Decontaminatorbrush.cfg]
[include Nevermore.cfg]
[include Adaptive_voron_purge.cfg]
[include Adaptive_Mesh.cfg]
[exclude_object]
#[include_Build_sheet]
#[include timelapse.cfg]
[include led_progress.cfg]
[include led_effect.cfg]
#[include Adaptive_line_purge.cfg]
[include shaketune.cfg]

########################################################
########################################################
########################################################
[printer]
kinematics: corexy
max_velocity: 400
max_accel: 5000           #Max 4000
max_z_velocity: 30          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: EBBCan: PB6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300


##--------------------------------------------------------------------
homing_speed: 75   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200    #set to 400 for 0.9 degree stepper
endstop_pin: PF5
position_min: 0
##--------------------------------------------------------------------


##  Uncomment for 300mm build
position_endstop: 300
position_max: 300    #300 default


##--------------------------------------------------------------------
homing_speed: 50  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
#endstop_pin: PG10
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 300mm build
position_max: 260

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################
####################
##DIRECT CONNECT SETTINGS FOR TROUBLESHOOTING##
#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4
###################
##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
rotation_distance: 47.088
gear_ratio: 9:1
microsteps: 16
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
##  rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1

nozzle_diameter: .4
filament_diameter: 1.75
heater_pin: EBBCan: PB13
min_temp: 10
max_temp: 310
max_power: 1.0
min_extrude_temp: 200
max_extrude_only_distance: 101

sensor_type:MAX31865
sensor_pin: EBBCan: PA4    # if your can mcu is called something other than EBBCan, change that  
spi_bus: spi1
rtd_nominal_r: 1000   # for a PT100, this would be 100 instead of 1000
rtd_reference_r: 4300 # for a PT100, this would be 430 instead of 4300
rtd_num_of_wires: 2   # for a 4 wire connection, this would  be 4 instead of 2



#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##Try to keep pressure_advance below 1.0
pressure_advance: 0.05
##Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040
max_extrude_cross_section:5
#   Maximum area (in mm^2) of an extrusion cross section (eg,
#   extrusion width multiplied by layer height). This setting prevents
#   excessive amounts of extrusion during relatively small XY moves.
#   If a move requests an extrusion rate that would exceed this value
#   it will cause an error to be returned. The default is: 4.0 *
#   nozzle_diameter^2

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 999999                

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.9
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769
pwm_cycle_time: 0.01612

[verify_heater heater_bed]
max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 60
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.


#####################################################################
#   Probe
#####################################################################

##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]
pin: !EBBCan: PB5
x_offset: 0
y_offset:0
#z_offset:0
lift_speed: 8
samples: 3
samples_result: median
sample_retract_dist: 3.0
#samples_tolerance: 0.01               #For testing and troubleshooting#
samples_tolerance: 0.006
samples_tolerance_retries: 3


activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: EBBCan: PA1
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: EBBCan: PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan1]
pin: PD12
kick_start_time: 0.5
fan_speed: 0.8
idle_speed: 0.25
idle_timeout: 30
max_power: 1.0
heater: heater_bed, extruder
stepper: stepper_x, stepper_y, stepper_z

##  Controller fan - FAN2
[controller_fan controller_fan2]
pin: PD15
kick_start_time: 0.5
fan_speed: 0.8
idle_speed: 0.25
idle_timeout: 30
max_power: 1.0
heater: heater_bed, extruder
stepper: stepper_x, stepper_y, stepper_z


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:150,150
speed:150
z_hop:10
z_hop_speed:10


##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------

##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
gantry_corners:
   -60,-10
   360,370
#  Probe points
points:
   50,25
   50,225
   250,225
   250,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 6
retries: 6
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
# 	Bed Mesh
#####################################################################

[bed_mesh]
speed: 300
horizontal_move_z: 6
##-------------------------------------------------------------------

##	Uncomment for 300mm build
mesh_min: 40, 40
mesh_max: 260,260

##--------------------------------------------------------------------

#fade_start: 0.6
#fade_end: 10.0
probe_count: 5,5
mesh_pps: 2,2
algorithm: bicubic
zero_reference_position=150,150

bicubic_tension: 0.2
move_check_distance: 3.0
split_delta_z: .010
fade_start: 1.0 
fade_end: 5.0

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   TEMPERATURE SENSORS
#####################################################################

[temperature_sensor Chamber]
sensor_type: Generic 3950 
sensor_pin: PF6
#min_temp: 0
max_temp: 80

[temperature_sensor EBB_TOOLHEAD]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2
 

#RASPBERRY PI
[temperature_sensor Raspberry_PI]
sensor_type: temperature_host

#####################################################################
##################FILAMENT RUNOUT SENSOR#############################
#####################################################################

##[filament_motion_sensor btt_sensor]
##detection_length: 7.0
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
##extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
##switch_pin: PG12
#   The pin on which the switch is connected. This parameter must be
#   provided.
##pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
##runout_gcode:
##    M117 Filament out
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.



#####################################################################
#   Macros
#####################################################################
##########################

[gcode_macro G32]
gcode:
 
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32


#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:

# Parameters
    #{% set BED = params.BED|int %} ; Get bed temp from gcode
    #{% set HOTEND = params.HOTEND|int %} ; Get nozzle temp from gcode
    #{% set CHAMBER = params.CHAMBER|default(0)|int %} ; Get chamber temp from gcode
    #lights_on
    # <insert routines>
    #{% set initial_tool = params.TOOL|int %}
    
    M190 S{110}                    ; wait for bed temp
    G28                            # Home if needed
    G90                            # Use absolute coordinates
    SET_GCODE_OFFSET Z=0.0         # Reset the G-Code Z offset from previous value
    BED_MESH_CLEAR                 #Clear the current bed mesh
    STATUS_MESHING
    CLEAN_NOZZLE
    AFC_BRUSH                  #Clean Nozzle before quad gantry to get better probe reading
    QUAD_GANTRY_LEVEL              # level the gantry, requires probe    
    STATUS_READY
    TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={35}   ; wait for chamber temp
    M109 S{150}                    ; wait for hotend temp    
    AFC_PARK
    G1 Z20 F3000                                                            ; move nozzle away from bed
    BED_MESH_CALIBRATE # calibrate the bed mesh, save as default
    BED_MESH_PROFILE LOAD=default # loads default bed mesh    					 			; move next to brush bucket
    AFC_PARK
    STATUS_HEATING
    M109 S{250}                    ; wait for hotend temp 
    {initial_tool} #Load Initial Tool
    CLEAN_NOZZLE
    AFC_BRUSH
    STATUS_READY
    M117 Printing...                                                        ; message to the lcd
    

#This would now be run like `PRINT_START BED=110 HOTEND=250 CHAMBER=45`.
#Chamber defaults to 0 if not specified - see parameters section.
##--------------------------------------------------------------------
#fade_start: 0.6
#fade_end: 10.0
#probe_count: 7,7 # Values should be odd, so one point is directly at bed center
#algorithm: bicubic
#relative_reference_index: 12 # Update when changing probe_count, to ((x points * y points) - 1) / 2. (the center point)
###################################
###################################

[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END


    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
   BT_TOOL_UNLOAD        ;bt    Unload Filament
   CLEAN_NOZZLE
   #PARKCENTER
   #M109 S{150}           ;bt   Bring temp to 150 
  
   TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600   ; park nozzle at rear
    M107                                     ; turn off fan
    AFC_BRUSH             ;bt   Brush 
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600 ; park nozzle at rear
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    
   

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro HEATSOAK]

gcode:
	# Parameters
	{% set t = params.T|default(110)|int %}
	{% set move = params.MOVE|default(1)|int %}

	#UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0  ; cancel off timer (if there is one)
	#SET_FAN_SPEED FAN=Exhaust SPEED= 0		 		; turn off exhaust fan
	M140 S{110}										; heat bed
	{% if t >= 100 %}
		M104 S150									; set hotend to no-ooze temp
		M106 S51 									; turn on part fan (20%)
	{% else %}
		M106 S0 									; turn part fan off
	{% endif %}
	{% if move == 1 %}
		#CG28										; conditional home
        PARKCENTER						 			; move to bed
	{% endif %}
    STATUS_CLEANING


# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
                                   														
    SAVE_GCODE_STATE NAME=PARKCENTER
	G90                                   			; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500	
	RESTORE_GCODE_STATE NAME=PARKCENTER




                                              #############################
#####################################################FILAMENT--CHANGE#####################################################################
                                              #############################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F10000
    G1 E-50 F1800          # ensure filament is clear of extruder gears
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro FILAMENT_UNLOAD]
gcode:
    M83                    # set extruder to relative extrusion
    G90                    # set toolhead to absolute position
    G1 Z80 F100000         
    G1 X150 Y50 F10000    # move up and to front/center to straighten filament path
    G1 E3  F300            # extrude slowly to soften tip of filament
    G1 E-30 F10000        # quickly yank filament back clear of hotend
    G1 E-50 F1800          # ensure filament is clear of extruder gears
    M82                    # set extruder to absolute extrusion

[gcode_macro FILAMENT_LOAD]
gcode:
    M83                    # set extruder to relative extrusion
    G90                    # set toolhead to absolute position
    G1 Z80 F100000
    G1 X150 Y50 F10000    # move up and to front/center to straighten filament path
    G1 E50 F300            # extrude filament through into hotend
    G1 E30 F240            # slowly extrude through hotend to partially purge previous filament
    M82                    # set extruder to absolute extrusion

[gcode_macro FL_TOPREAR_RIGHT]
gcode:
    M83                    # set extruder to relative extrusion
    G90                    # set toolhead to absolute position
    G1 Z257 F1000
    G1 X299 Y299 F1000    # move up and to front/center to straighten filament path
    G1 E50 F300            # extrude filament through into hotend
    G1 E30 F240            # slowly extrude through hotend to partially purge previous filament
    M82                    # set extruder to absolute extrusion


[gcode_macro PURGE_LINE]
gcode:

  G0 X290 Y50 F3000              ; Go to side
  G0 Z0.25                       ;
  G1 E15 F200                    ; purge blob
  G92 E0                         ; zero the extruded length
  G1 Y280 E7.5 F800              ; Extrude purge line
  G1 Y300 E-.1 F800              ; Retract while wiping on purged line
  G1 Z4                          ; lift z

[gcode_macro _RUNOUT_INFO]
gcode:
  {% if 'filament_motion_sensor runout' in printer.configfile.settings %}
    #{% set enable = printer['filament_motion_sensor btt_sensor'].enabled %}
    #{% set detect = printer['filament_motion_sensor btt_sensor'].filament_detected %}
    {% set enable = true %}
    {% set detect = true %}
    {action_respond_info("RUNOUT Motion Sensor:
                          Enabled: %s
                          Detect Filament: %s" % (enable|lower,detect|lower))}
  {% endif %}

[gcode_macro PARK_TO_BRUSH]
  gcode:
    G1 X188 Y300 Z6 ; Move to the parking position
    G92 E0          ; Reset the extruder position
    G92 E0          ; Reset the extruder position (repeat to be sure)
   # G1 E-2 F300     ; Retract filament to avoid oozing
   # G1 Z15 F9000    ; Lift the toolhead
   # G28             ; Home all axes
   # G92 E0          ; Reset the extruder position

######################################################################################################################

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            
            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            
            # Small box
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        G28
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[include AFC/*.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 51.567
#*# pid_ki = 3.243
#*# pid_kd = 204.979
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.324
#*# pid_ki = 2.281
#*# pid_kd = 70.276
#*#
#*# [probe]
#*# z_offset = -0.590
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.047446, 0.091196, 0.102446, 0.087446, 0.066196
#*# 	  -0.021304, 0.038696, 0.034946, 0.046196, -0.007554
#*# 	  -0.031304, 0.021196, -0.000054, -0.000054, -0.016304
#*# 	  -0.000054, 0.042446, 0.069946, 0.118696, 0.049946
#*# 	  0.146196, 0.231196, 0.273696, 0.178696, 0.144946
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 45.56999999999999
#*# max_x = 254.25
#*# min_y = 46.86
#*# max_y = 254.06
#*#
#*# [input_shaper]
